{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment - dev, test, or prod"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "East US",
        "East US 2",
        "Central US",
        "North Central US",
        "South Central US",
        "West Central US"
      ],
      "metadata": {
        "description": "Azure region to deploy resources - East US, East US 2, Central US, North Central US, South Central US, West Central US."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      }
    },
    "virtualNetworkUsage": {
      "type": "string",
      "allowedValues": [
        "existing",
        "new"
      ],
      "metadata": {
        "description": "Indicates if a new virtual network will be created or use an existing one."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to Create, mandatory on both existing or new virtual network usage. A prefix will be automatically added."
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the resource group where the existing virtual network resides. When using an existing virtual network, this becomes a mandatory parameter so the deployment can find the ID of the existing virtual network."
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET, in CIDR format x.x.x.x/y, mandatory if creating a new virtual network."
      }
    },
    "DNSAddressforVNet": {
      "type": "string",
      "metadata": {
        "description": "DNS server IP addresses for VNet"
      }
    },
    "adfsSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the ad-adfs subnet, mandatory on both virtual network usage options (new or existing)."
      }
    },
    "adfsSubnetAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the ad-adfs subnet, which contains the Domain Controllers and ADFS servers, mandatory if creating a new virtual network."
      }
    },
    "dmzSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the dmz subnet, mandatory on both virtual network usage options (new or existing)."
      }
    },
    "dmzSubnetAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the dmz subnet, which contains the Windows application proxy servers, mandatory if creating a new virtual network."
      }
    },
    "PaloAltoSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Palo Alto subnet, mandatory on both virtual network usage options (new or existing)."
      }
    },
    "PaloAltoSubnetAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the Palo Alto subnet, which contains the Domain Controllers and ADFS servers, mandatory if creating a new virtual network."
      }
    },
    "managementSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the management subnet, mandatory on both virtual network usage options (new or existing)."
      }
    },
    "managementSubnetAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the management subnet, which contains the Domain Controllers and ADFS servers, mandatory if creating a new virtual network."
      }
    },
    "addc01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first Domain Controller, this IP address will be statically assigned to the DC and must be a valid ip address within the adfs subnet."
      }
    },
    "addc02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second Domain Controller, this IP address will be statically assigned to the DC and must be a valid ip address within the adfs subnet."
      }
    },
    "adfs01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first ADFS server, this IP address will be statically assigned to the ADFS server and must be a valid ip address within the adfs subnet."
      }
    },
    "adfs02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second ADFS server, this IP address will be statically assigned to the ADFS server and must be a valid ip address within the adfs subnet."
      }
    },
    "wap01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first WAP server, this IP address will be statically assigned to the WAP server and must be a valid ip address within the DMZ subnet."
      }
    },
    "wap02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second WAP server, this IP address will be statically assigned to the WAP server and must be a valid ip address within the DMZ subnet."
      }
    },
    "pa01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first Palo Alto server, this IP address will be statically assigned to the PA server and must be a valid ip address within the Palo Alto subnet."
      }
    },
    "pa02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second WAP server, this IP address will be statically assigned to the PA server and must be a valid ip address within the Palo Alto subnet."
      }
    },
    "jb01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first Palo Alto server, this IP address will be statically assigned to the jumpbox server and must be a valid ip address within the management subnet."
      }
    },
    "jb02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second WAP server, this IP address will be statically assigned to the jumpbox server and must be a valid ip address within the management subnet."
      }
    },
    "adfsLoadBalancerPrivateIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the ADFS load balancer, this IP address will be statically assigned to the load balancer and must be a valid ip address within the adfs subnet."
      }
    },
    "addcVmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name prefix for Domain Controllers"
      }
    },
    "adfsVmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name prefix for ADFS servers"
      }
    },
    "wapVmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name prefix for WAP servers"
      }
    },
    "PaloAltoVmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name prefix for Palo Alto servers"
      }
    },
    "jumpboxVmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name prefix for jumpbox servers"
      }
    },
    "addcVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the Domain Controllers"
      }
    },
    "adfsVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the ADFS servers"
      }
    },
    "wapVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the WAP servers"
      }
    },
    "PaloAltoVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the Palo Alto servers"
      }
    },
    "jumpboxVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the jumpbox servers"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the local Administrator of the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the local Administrator account of the virtual machines"
      }
    }
  },
    "variables": {
      "baseUrl": "https://raw.githubusercontent.com/etacik/adfsinazure/master/",
      "storageAccountNamePrefix": "[concat(uniquestring(resourceGroup().id),'sa')]",
      "deployStorageAccountsUrl": "[concat(variables('baseUrl'),'/deployStorageAccounts.json')]",
      "deployPublicIPsUrl": "[concat(variables('baseUrl'),'/deployPublicIPs.json')]",
      "publicIpName": "wapLbPip",
      "publicIPAddressType": "Static",
      "deployAvailabilitySetsUrl": "[concat(variables('baseUrl'),'/deployAvailabilitySets.json')]",
      "availabilitySetNames": [
        "addc-as",
        "adfs-as",
        "wap-as",
        "pa-as",
        "mgmt-as"
      ],
      "deployVnetURL": "[concat(variables('baseUrl'),'/vnet-',parameters('virtualNetworkUsage'),'.json')]",
      "subnets": [
        {
          "name": "[parameters('adfsSubnetName')]",
          "properties": {
            "addressPrefix": "[parameters('adfsSubnetAddressRange')]",
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups','adfs-sn-nsg')]"
            }
          }
        },
        {
          "name": "[parameters('dmzSubnetName')]",
          "properties": {
            "addressPrefix": "[parameters('dmzSubnetAddressRange')]",
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups','dmz-sn-nsg')]"
            }
          }
        },
        {
          "name": "[parameters('PaloAltoSubnetName')]",
          "properties": {
            "addressPrefix": "[parameters('PaloAltoSubnetAddressRange')]"
           }
        },
        {
          "name": "[parameters('managementSubnetName')]",
          "properties": {
            "addressPrefix": "[parameters('managementSubnetAddressRange')]",
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups','management-sn-nsg')]"
            }
          }
        }
      ],
      "deployLoadBalancersUrl": "[concat(variables('baseUrl'),'/deployLoadBalancers.json')]",
      "loadBalancerNames": [
        "adfs-lb",
        "wap-lb"
      ],
      "lbfe": "lbfe",
      "lbbe": "lbbe",
      "rdpNats": [
        "rdpWap01",
        "rdpWap02"
      ],
      "lbPublicIpResourceIds": [
        "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),variables('publicIpName'))]"
      ],
      "deployNicsUrl": "[concat(variables('baseUrl'),'/deployNics.json')]",
      "deployNsgsUrl": "[concat(variables('baseUrl'),'/deployNsgs.json')]",
      "deployVmsUrl": "[concat(variables('baseUrl'),'/deployVms.json')]"
    },
  "resources": [
    {
      "name": "storageAccountDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployStorageAccountsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          }
        }
      }
    },
    {
      "name": "publicIpAddressesDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPublicIPsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')"
          },
          "publicIpName": {
            "value": "[concat(parameters('environment'),'-',variables('publicIpName'))]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          }
        }
      }
    },
    {
      "name": "availabilitySetsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAvailabilitySetsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')"
          },
          "availabilitySetNames": {
            "value": "[concat(parameters('environment'),'-',variables('availabilitySetNames'))]"
          }
        }
      }
    },
    {
      "name": "virtualNetworkDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/nsgDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVnetURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')"
          },
          "virtualNetworkName": {
            "value": "[concat(parameters('environment'),parameters('virtualNetworkName'))]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "DNSAddressforVNet": {
            "value": "[parameters('DNSAddressforVNet')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "resourceGroupName": {
            "value": "[parameters('virtualNetworkResourceGroupName')]"
          }
        }
      }
    },
    {
      "name": "loadBalancerDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/virtualNetworkDeployment",
        "Microsoft.Resources/deployments/publicIpAddressesDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployLoadBalancersUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')"
          },
          "loadBalancerNames": {
            "value": "[concat(parameters('environment'),'-',variables('loadBalancerNames'))]"
          },
          "lbfe": {
            "value": "[variables('lbfe')]"
          },
          "lbbe": {
            "value": "[variables('lbbe')]"
          },
          "rdpNats": {
            "value": "[variables('rdpNats')]"
          },
          "lbPublicIpResourceIds": {
            "value": "[variables('lbPublicIpResourceIds')]"
          },
          "subnetIds": {
            "value": [
              "[concat(reference('virtualNetworkDeployment').outputs.vnetId.value,'/subnets/',parameters('adfsSubnetName'))]",
              "[concat(reference('virtualNetworkDeployment').outputs.vnetId.value,'/subnets/',parameters('dmzSubnetName'))]"
            ]
          },
          "adfsLoadBalancerPrivateIpAddress": {
            "value": "[parameters('adfsLoadBalancerPrivateIpAddress')]"
          }
        }
      }
    },
    {
      "name": "nicsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/virtualNetworkDeployment",
        "Microsoft.Resources/deployments/loadBalancerDeployment",
        "Microsoft.Resources/deployments/availabilitySetsDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNicsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "ipAddresses": {
            "value": [
              "[parameters('addc01NicIPAddress')]",
              "[parameters('addc02NicIPAddress')]",
              "[parameters('adfs01NicIPAddress')]",
              "[parameters('adfs02NicIPAddress')]",
              "[parameters('wap01NicIPAddress')]",
              "[parameters('wap02NicIPAddress')]",
              "[parameters('pa01NicIPAddress')]",
              "[parameters('pa02NicIPAddress')]",
              "[parameters('jb01NicIPAddress')]",
              "[parameters('jb02NicIPAddress')]"
            ]
          },
          "nicNames": {
            "value": [
              "[concat(parameters('addcVmNamePrefix'),'1-nic')]",
              "[concat(parameters('addcVmNamePrefix'),'2-nic')]",
              "[concat(parameters('adfsVmNamePrefix'),'1-nic')]",
              "[concat(parameters('adfsVmNamePrefix'),'2-nic')]",
              "[concat(parameters('wapVmNamePrefix'),'1-nic')]",
              "[concat(parameters('wapVmNamePrefix'),'2-nic')]",
              "[concat(parameters('PaloAltoVmNamePrefix'),'1-nic')]",
              "[concat(parameters('PaloAltoVmNamePrefix'),'2-nic')]",
              "[concat(parameters('jumpboxVmNamePrefix'),'1-nic')]",
              "[concat(parameters('jumpboxVmNamePrefix'),'2-nic')]"
            ]
          },
          "subnetIds": {
            "value": [
              "[concat(reference('virtualNetworkDeployment').outputs.vnetId.value,'/subnets/',parameters('adfsSubnetName'))]",
              "[concat(reference('virtualNetworkDeployment').outputs.vnetId.value,'/subnets/',parameters('dmzSubnetName'))]",
              "[concat(reference('virtualNetworkDeployment').outputs.vnetId.value,'/subnets/',parameters('PaloAltoSubnetName'))]",
              "[concat(reference('virtualNetworkDeployment').outputs.vnetId.value,'/subnets/',parameters('managementSubnetName'))]"
            ]
          },
          "adfsBEAddressPoolID": {
            "value": "[concat(reference('loadBalancerDeployment').outputs.adfslbID.value,'/backendAddressPools/',variables('lbbe'))]"
          },
          "wapRDPNATRuleIDs": {
            "value": [
              "[concat(reference('loadBalancerDeployment').outputs.waplbID.value,'/inboundNatRules/',variables('rdpNats')[0])]",
              "[concat(reference('loadBalancerDeployment').outputs.waplbID.value,'/inboundNatRules/',variables('rdpNats')[1])]"
            ]
          },
          "wapBeAddressPoolID": {
            "value": "[concat(reference('loadBalancerDeployment').outputs.waplbID.value,'/backendAddressPools/',variables('lbbe'))]"
          }
        }
      }
    },
    {
      "name": "nsgDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNsgsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adfsSubnetAddressRange": {
            "value": "[parameters('adfsSubnetAddressRange')]"
          },
          "dmzSubnetAddressRange": {
            "value": "[parameters('dmzSubnetAddressRange')]"
          },
          "managementSubnetAddressRange": {
            "value": "[parameters('managementSubnetAddressRange')]"
          }
        }
      }
    },
    {
      "name": "addcVmsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/nicsDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVmsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmNamePrefix": {
            "value": "[parameters('addcVmNamePrefix')]"
          },
          "vmSize": {
            "value": "[parameters('addcVMsSize')]"
          },
          "availabilitySetName": {
            "value": "[variables('availabilitySetNames')[0]]"
          },
          "vmCount": {
            "value": 2
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          }
        }
      }
    },
    {
      "name": "adfsVmsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/nicsDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVmsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmNamePrefix": {
            "value": "[parameters('adfsVmNamePrefix')]"
          },
          "vmSize": {
            "value": "[parameters('adfsVMsSize')]"
          },
          "availabilitySetName": {
            "value": "[variables('availabilitySetNames')[1]]"
          },
          "vmCount": {
            "value": 2
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          }
        }
      }
    },
    {
      "name": "wapVmsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/nicsDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVmsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmNamePrefix": {
            "value": "[parameters('wapVmNamePrefix')]"
          },
          "vmSize": {
            "value": "[parameters('wapVMsSize')]"
          },
          "availabilitySetName": {
            "value": "[variables('availabilitySetNames')[2]]"
          },
          "vmCount": {
            "value": 2
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          }
        }
      }
    },
    {
      "name": "PaloAltoVmsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/nicsDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVmsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmNamePrefix": {
            "value": "[parameters('PaloAltoVmNamePrefix')]"
          },
          "vmSize": {
            "value": "[parameters('PaloAltoVMsSize')]"
          },
          "availabilitySetName": {
            "value": "[variables('availabilitySetNames')[3]]"
          },
          "vmCount": {
            "value": 2
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          }
        }
      }
    },
    {
      "name": "jumpboxVmsDeployment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/nicsDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVmsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmNamePrefix": {
            "value": "[parameters('jumpboxVmNamePrefix')]"
          },
          "vmSize": {
            "value": "[parameters('jumpboxVMsSize')]"
          },
          "availabilitySetName": {
            "value": "[variables('availabilitySetNames')[4]]"
          },
          "vmCount": {
            "value": 2
          },
          "storageAccountNamePrefix": {
            "value": "[variables('storageAccountNamePrefix')]"
          }
        }
      }
    }
    ]
  }
